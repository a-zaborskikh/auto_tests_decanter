{"name": "test_business_path", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: The element with the reference 85f123fe-a4ed-4770-93b9-42002509c9f8 is stale; either its node document is not the active document, or it is no longer connected to the DOM; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:192:5\nStaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:724:5\ngetKnownElement@chrome://remote/content/marionette/json.sys.mjs:401:11\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:259:20\ncloneObject@chrome://remote/content/marionette/json.sys.mjs:59:24\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:289:16\njson.deserialize@chrome://remote/content/marionette/json.sys.mjs:293:10\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:72:30", "trace": "set_up = None\n\n    @allure.description('Test business path')\n    def test_business_path(set_up):\n        driver = webdriver.Firefox()\n    \n        welcome = WelcomePage(driver)\n        welcome.enter_to_service()\n    \n        main_page = MainPage(driver)\n        main_page.open_page_whisky_via_menu()\n    \n        whisky_page = WhiskyPage(driver)\n        whisky_page.add_to_cart_products()\n    \n        whisky_page.open_cart_page()\n    \n        cart_page = CartPage(driver)\n>       cart_page.select_products_in_cart()\n\ntests\\test_business_path.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\cart_page.py:183: in select_products_in_cart\n    self.assert_quantity_products(self.get_quantity_product_1(), self.get_quantity_product_2(),\npages\\cart_page.py:86: in get_quantity_product_1\n    return WebDriverWait(self.driver, 30).until(EC.element_to_be_clickable((By.XPATH,\nC:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\nC:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:365: in _predicate\n    if element and element.is_enabled():\nC:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\nC:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nC:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000247EF9510A0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"The element with the reference 85f123...sys.mjs:293:10\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:72:30\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: The element with the reference 85f123fe-a4ed-4770-93b9-42002509c9f8 is stale; either its node document is not the active document, or it is no longer connected to the DOM; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:192:5\nE       StaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:724:5\nE       getKnownElement@chrome://remote/content/marionette/json.sys.mjs:401:11\nE       deserializeJSON@chrome://remote/content/marionette/json.sys.mjs:259:20\nE       cloneObject@chrome://remote/content/marionette/json.sys.mjs:59:24\nE       deserializeJSON@chrome://remote/content/marionette/json.sys.mjs:289:16\nE       json.deserialize@chrome://remote/content/marionette/json.sys.mjs:293:10\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:72:30\n\nC:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "description": "Test business path", "steps": [{"name": "enter_to_service", "status": "passed", "start": 1714132453481, "stop": 1714132458610}, {"name": "open_page_whisky_via_menu", "status": "passed", "start": 1714132458610, "stop": 1714132461987}, {"name": "add_to_cart_products", "status": "passed", "start": 1714132461987, "stop": 1714132463962}, {"name": "open_cart_page", "status": "passed", "start": 1714132463963, "stop": 1714132468749}, {"name": "select_products_in_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: The element with the reference 85f123fe-a4ed-4770-93b9-42002509c9f8 is stale; either its node document is not the active document, or it is no longer connected to the DOM; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:192:5\nStaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:724:5\ngetKnownElement@chrome://remote/content/marionette/json.sys.mjs:401:11\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:259:20\ncloneObject@chrome://remote/content/marionette/json.sys.mjs:59:24\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:289:16\njson.deserialize@chrome://remote/content/marionette/json.sys.mjs:293:10\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:72:30\n\n", "trace": "  File \"C:\\Users\\murli\\PycharmProjects\\pet_project_decanter\\pages\\cart_page.py\", line 183, in select_products_in_cart\n    self.assert_quantity_products(self.get_quantity_product_1(), self.get_quantity_product_2(),\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\murli\\PycharmProjects\\pet_project_decanter\\pages\\cart_page.py\", line 86, in get_quantity_product_1\n    return WebDriverWait(self.driver, 30).until(EC.element_to_be_clickable((By.XPATH,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 365, in _predicate\n    if element and element.is_enabled():\n                   ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 192, in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\pythonProject\\pythonProject1\\pythonProject\\wb_project\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1714132469167, "stop": 1714132471105}], "attachments": [{"name": "stdout", "source": "b1ffb7cb-6714-4d16-abac-d1e0088f7cb1-attachment.txt", "type": "text/plain"}], "start": 1714132444508, "stop": 1714132471440, "uuid": "8aaf6bf6-cf34-43ae-9c4a-3fc474b359eb", "historyId": "5a66284aa58d3557611a3b88df4ac32b", "testCaseId": "5a66284aa58d3557611a3b88df4ac32b", "fullName": "tests.test_business_path#test_business_path", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_business_path"}, {"name": "host", "value": "DESKTOP-CNNMT1K"}, {"name": "thread", "value": "17384-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_business_path"}]}